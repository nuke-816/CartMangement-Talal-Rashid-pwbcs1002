{"ast":null,"code":"var _jsxFileName = \"D:\\\\BSCS\\\\Semester 3\\\\WEB\\\\cart-management\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getProducts, getCart, addToCart, updateQuantity, removeFromCart } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n  const fetchProducts = async () => {\n    try {\n      const fetchedProducts = await getProducts(); // API call to fetch products\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const fetchCart = async userId => {\n    try {\n      const fetchedCart = await getCart(userId); // API call to fetch user's cart\n      setCart(fetchedCart);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n  const handleAddToCart = async (userId, productId, quantity) => {\n    try {\n      await addToCart(userId, productId, quantity); // API call to add item to the cart\n      fetchCart(userId); // Refresh the cart after adding\n    } catch (error) {\n      console.error('Error adding product to cart:', error);\n    }\n  };\n  const handleUpdateQuantity = async (userId, productId, quantity) => {\n    try {\n      await updateQuantity(userId, productId, quantity); // API call to update cart item\n      fetchCart(userId); // Refresh cart\n    } catch (error) {\n      console.error('Error updating cart quantity:', error);\n    }\n  };\n  const handleRemoveFromCart = async (userId, productId) => {\n    try {\n      await removeFromCart(userId, productId); // API call to remove item from cart\n      fetchCart(userId); // Refresh cart\n    } catch (error) {\n      console.error('Error removing product from cart:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts(); // Fetch products when the app loads\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      products,\n      fetchCart,\n      handleAddToCart,\n      handleUpdateQuantity,\n      handleRemoveFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ddKgQqQAwn+i9jYIJSyxNdW7NNg=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getProducts","getCart","addToCart","updateQuantity","removeFromCart","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","products","setProducts","fetchProducts","fetchedProducts","error","console","fetchCart","userId","fetchedCart","handleAddToCart","productId","quantity","handleUpdateQuantity","handleRemoveFromCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BSCS/Semester 3/WEB/cart-management/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getProducts, getCart, addToCart, updateQuantity, removeFromCart } from '../api/api';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  const fetchProducts = async () => {\n    try {\n      const fetchedProducts = await getProducts(); // API call to fetch products\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  const fetchCart = async (userId) => {\n    try {\n      const fetchedCart = await getCart(userId); // API call to fetch user's cart\n      setCart(fetchedCart);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n\n  const handleAddToCart = async (userId, productId, quantity) => {\n    try {\n      await addToCart(userId, productId, quantity); // API call to add item to the cart\n      fetchCart(userId); // Refresh the cart after adding\n    } catch (error) {\n      console.error('Error adding product to cart:', error);\n    }\n  };\n\n  const handleUpdateQuantity = async (userId, productId, quantity) => {\n    try {\n      await updateQuantity(userId, productId, quantity); // API call to update cart item\n      fetchCart(userId); // Refresh cart\n    } catch (error) {\n      console.error('Error updating cart quantity:', error);\n    }\n  };\n\n  const handleRemoveFromCart = async (userId, productId) => {\n    try {\n      await removeFromCart(userId, productId); // API call to remove item from cart\n      fetchCart(userId); // Refresh cart\n    } catch (error) {\n      console.error('Error removing product from cart:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts(); // Fetch products when the app loads\n  }, []);\n\n  return (\n    <CartContext.Provider value={{\n      cart,\n      products,\n      fetchCart,\n      handleAddToCart,\n      handleUpdateQuantity,\n      handleRemoveFromCart\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}