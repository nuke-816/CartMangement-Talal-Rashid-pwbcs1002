{"ast":null,"code":"var _jsxFileName = \"D:\\\\BSCS\\\\Semester 3\\\\WEB\\\\cart-management\\\\frontend\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // Function to add products to the cart\n  const addToCart = (product, quantity) => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item.productId === product._id);\n      if (existingProduct) {\n        return prevCart.map(item => item.productId === product._id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      }\n      return [...prevCart, {\n        productId: product._id,\n        quantity\n      }];\n    });\n  };\n\n  // Function to remove products from the cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.productId !== productId));\n  };\n\n  // Function to calculate the total price of the items in the cart\n  const calculateTotal = () => {\n    const newTotal = cart.reduce((total, item) => {\n      // We assume that `item.productId` contains the product object with a `price` field\n      return total + item.productId.price * item.quantity;\n    }, 0);\n    setTotal(newTotal);\n  };\n\n  // Recalculate the total every time the cart state changes\n  useEffect(() => {\n    calculateTotal();\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      total,\n      calculateTotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"d7rM/Gu5Boo36K50NmkeLGTjXc4=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","total","setTotal","addToCart","product","quantity","prevCart","existingProduct","find","item","productId","_id","map","removeFromCart","filter","calculateTotal","newTotal","reduce","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BSCS/Semester 3/WEB/cart-management/frontend/src/components/Cart.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // Function to add products to the cart\n  const addToCart = (product, quantity) => {\n    setCart((prevCart) => {\n      const existingProduct = prevCart.find((item) => item.productId === product._id);\n      if (existingProduct) {\n        return prevCart.map((item) =>\n          item.productId === product._id\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        );\n      }\n      return [...prevCart, { productId: product._id, quantity }];\n    });\n  };\n\n  // Function to remove products from the cart\n  const removeFromCart = (productId) => {\n    setCart((prevCart) => prevCart.filter((item) => item.productId !== productId));\n  };\n\n  // Function to calculate the total price of the items in the cart\n  const calculateTotal = () => {\n    const newTotal = cart.reduce((total, item) => {\n      // We assume that `item.productId` contains the product object with a `price` field\n      return total + (item.productId.price * item.quantity);\n    }, 0);\n    setTotal(newTotal);\n  };\n\n  // Recalculate the total every time the cart state changes\n  useEffect(() => {\n    calculateTotal();\n  }, [cart]);\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, total, calculateTotal }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IACvCL,OAAO,CAAEM,QAAQ,IAAK;MACpB,MAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAKN,OAAO,CAACO,GAAG,CAAC;MAC/E,IAAIJ,eAAe,EAAE;QACnB,OAAOD,QAAQ,CAACM,GAAG,CAAEH,IAAI,IACvBA,IAAI,CAACC,SAAS,KAAKN,OAAO,CAACO,GAAG,GAC1B;UAAE,GAAGF,IAAI;UAAEJ,QAAQ,EAAEI,IAAI,CAACJ,QAAQ,GAAGA;QAAS,CAAC,GAC/CI,IACN,CAAC;MACH;MACA,OAAO,CAAC,GAAGH,QAAQ,EAAE;QAAEI,SAAS,EAAEN,OAAO,CAACO,GAAG;QAAEN;MAAS,CAAC,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMQ,cAAc,GAAIH,SAAS,IAAK;IACpCV,OAAO,CAAEM,QAAQ,IAAKA,QAAQ,CAACQ,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAKA,SAAS,CAAC,CAAC;EAChF,CAAC;;EAED;EACA,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAGjB,IAAI,CAACkB,MAAM,CAAC,CAAChB,KAAK,EAAEQ,IAAI,KAAK;MAC5C;MACA,OAAOR,KAAK,GAAIQ,IAAI,CAACC,SAAS,CAACQ,KAAK,GAAGT,IAAI,CAACJ,QAAS;IACvD,CAAC,EAAE,CAAC,CAAC;IACLH,QAAQ,CAACc,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACdyB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,oBACEP,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEI,SAAS;MAAEU,cAAc;MAAEZ,KAAK;MAAEc;IAAe,CAAE;IAAAlB,QAAA,EACrFA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CA3CWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}